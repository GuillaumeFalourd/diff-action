name: 'DIFF Action üïµÔ∏è'

description: 'Github Action to compare 2 files using diff üïµÔ∏è'

inputs:
    first_file_path:
        description: 'repo/path/file.txt'
        required: true
    second_file_path:
        description: 'repo/path/file.txt'
        required: true
    expected_result:
        description: 'PASSED or FAILED'
        required: false
        default: 'PASSED'
    specific_line:
        description: 'file line to compare'
        required: false

outputs:
  diff-output:
    description: "Diff output"
    value: ${{ steps.diff.outputs.result }}

runs:
  using: "composite"
  steps:

    - id: diff
      run: |
        if [ -z ${{ inputs.specific_line }} ]; then
          echo Comparing files
          if diff ${{ inputs.first_file_path }} ${{ inputs.second_file_path }} >/dev/null; then
            result=$(echo "PASSED")
          else
            result=$(echo "FAILED")
          fi
        else
          echo Comparing files specific line
          if diff <(head -n ${{ inputs.specific_line }} ${{ inputs.first_file_path }}) <(head -n ${{ inputs.specific_line }} ${{ inputs.second_file_path }} )  >/dev/null; then
            result=$(echo "PASSED")
          else
            result=$(echo "FAILED")
          fi
        fi
        echo ‚ÜîÔ∏è DIFF command result is $result
        echo "::set-output name=result::$(echo $result)"
      shell: bash

    - run: |
        echo ‚û°Ô∏è OUTPUT value is ${{ steps.diff.outputs.result }}
        echo ‚û°Ô∏è EXPECTED value is ${{ inputs.expected_result }}
        if [ ${{ steps.diff.outputs.result }} != ${{ inputs.expected_result }} ]; then
          echo "‚ùå OUTPUT value NOT EQUAL to EXPECTED value!"
          if [ -z ${{ inputs.specific_line }} ]; then
            diff ${{ inputs.first_file_path }} ${{ inputs.second_file_path }}
          else
            diff <(head -n ${{ inputs.specific_line }} ${{ inputs.first_file_path }}) <(head -n ${{ inputs.specific_line }} ${{ inputs.second_file_path }} )
          fi
          exit 1
        else
          echo "‚úÖ OUTPUT value EQUAL to EXPECTED value!"
        fi
      shell: bash

branding:
    icon: 'check'
    color: 'blue'
